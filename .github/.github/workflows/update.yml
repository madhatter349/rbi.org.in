name: Scrape latest data

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '21 11 * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out this repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        pip install requests selectolax pandas

    - name: Fetch latest data
      run: |
        python -c "
import requests
import pandas as pd
from selectolax.parser import HTMLParser

user_agent = requests.get('https://techfanetechnologies.github.io/latest-user-agent/user_agents.json').json()[-2]
headers = {'user-agent': user_agent}

def riskFreeInterestRate(url='https://www.rbi.org.in/'):
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        html_content = response.content
        parser = HTMLParser(html_content)
        selector = '#wrapper > div:nth-child(10) > table'
        nodes = parser.css(selector)
        if nodes:
            data = nodes[0].html
            df = pd.read_html(data)[0].iloc[4:13]
            df.columns = ['GovernmentSecurityName', 'Percent']
            df['GovernmentSecurityName'] = df['GovernmentSecurityName'].str.strip()
            df['Percent'] = df['Percent'].str.rstrip('% #*').str.lstrip(': ').astype('float32')
            json_data = df.to_json(orient='records')
            with open('RiskFreeInterestRate-new.json', 'w') as jsonFile:
                jsonFile.write(json_data)
        else:
            print('No table found with the given selector.')
    else:
        print(f'Failed to fetch the URL: {response.status_code}')

riskFreeInterestRate()
        "

    - name: Compare and generate commit message
      run: |
        if [ -f RiskFreeInterestRate.json ]; then
          csv-diff RiskFreeInterestRate.json RiskFreeInterestRate-new.json > message.txt
        else
          echo 'Initial commit' > message.txt
        fi

    - name: Commit and push if it changed
      run: |
        git config user.name 'Automated'
        git config user.email 'actions@users.noreply.github.com'
        if [ -f RiskFreeInterestRate-new.json ]; then
          mv RiskFreeInterestRate-new.json RiskFreeInterestRate.json
          git add RiskFreeInterestRate.json
          git commit -F message.txt || exit 0
          git push
        fi
