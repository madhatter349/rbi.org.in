name: Scrape latest data

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '21 11 * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out this repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - uses: actions/cache@v3
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt

    - name: Fetch latest data
      run: |
        python fetch_data.py

    - name: Check and create initial file if not exists
      run: |
        if [ ! -f RiskFreeInterestRate.json ]; then
          echo "[]" > RiskFreeInterestRate.json
          echo "Created initial RiskFreeInterestRate.json"
        fi

    - name: Compare and generate commit message
      run: |
        echo "Checking if new data file exists..."
        if [ -f RiskFreeInterestRate-new.json ]; then
          if [ -s RiskFreeInterestRate.json ]; then
            echo "New data file found, comparing with old data file..."
            csv-diff RiskFreeInterestRate.json RiskFreeInterestRate-new.json > message.txt
          else
            echo "Initial commit" > message.txt
          fi
        else
          echo "No new data file found, creating initial commit message..."
          echo 'Initial commit' > message.txt
        fi

    - name: Commit and push if it changed
      run: |
        git config user.name 'Automated'
        git config user.email 'actions@users.noreply.github.com'
        echo "Checking if there are changes to commit..."
        if [ -f RiskFreeInterestRate-new.json ]; then
          echo "Changes found, committing and pushing changes..."
          mv RiskFreeInterestRate-new.json RiskFreeInterestRate.json
          git add RiskFreeInterestRate.json
          git commit -F message.txt || exit 0
          git push
        else
          echo "No changes to commit."
        fi
